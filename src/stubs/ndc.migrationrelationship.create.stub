<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Str;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
     protected function checkRelationShip()
    {
        $relationship = '{{relationship}}';
        if (strlen($relationship) > 1) {
            $name = md5(Str::plural('{{tableOne}}').'_'.Str::plural('{{tableTwo}}'));
            $tableName = Str::plural('{{tableOne}}').'_'.Str::plural('{{tableTwo}}').'_'.$relationship ;
        } else {
            $name = null;
            $tableName = Str::plural('{{tableOne}}').'_'.Str::plural('{{tableTwo}}');
        }
        return [$tableName,$name];
    }
    public function up()
    {
        
        Schema::create($this->checkRelationShip()[0], function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('{{tableOne}}_id');
            $table->unsignedBigInteger('{{tableTwo}}_id');
            $table->timestamp('created_at')->default(DB::raw('CURRENT_TIMESTAMP'));
            $table->timestamp('updated_at')->default(DB::raw('CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP'));;
            $table->unique(['{{tableOne}}_id', '{{tableTwo}}_id'],$this->checkRelationShip()[1]);
            $table->foreign('{{tableOne}}_id')->references('id')->on(Str::plural('{{tableOne}}'))->onDelete('cascade');
            $table->foreign('{{tableTwo}}_id')->references('id')->on(Str::plural('{{tableTwo}}'))->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->checkRelationShip()[0]);
    }
};

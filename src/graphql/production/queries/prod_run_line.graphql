scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

extend type Query {
    prod_run_lines: [Prod_run_line!]! @all @guard
    prod_run_line(id: ID @eq): Prod_run_line @find @guard
}
type Prod_run_line {
    id: ID!
    prod_run_id: Int!
    date: Date!
    start: String!
    end: String
    status: String!
    created_at: DateTime
    updated_at: DateTime
    users: [User!]! @belongsToMany
    prodRun: Prod_run! @belongsTo
}

input CreateProdRunLineInput {
    prod_run_id: Int!
    date: Date!
    start: String!
    end: String
    status: String!
    created_at: DateTime
    updated_at: DateTime
}
input UpdateProdRunLineInput {
    id: ID!
    prod_run_id: Int
    date: Date
    start: String
    end: String
    status: String
    created_at: DateTime
    updated_at: DateTime
}

extend type Mutation {
    createProdRunLine(input: CreateProdRunLineInput! @spread): Prod_run_line!
        @guard
        @create
    updateProdRunLine(input: UpdateProdRunLineInput! @spread): Prod_run_line
        @guard
        @update
    updateProdRunLineEvent(
        input: UpdateProdRunLineInput! @spread
    ): Prod_run_line
        @guard
        @field(resolver: "App\\GraphQL\\Mutations\\UpdateProdRunLineEvent")
    deleteProdRunLine(id: ID!): Prod_run_line @guard @delete
}

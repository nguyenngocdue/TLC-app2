scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

extend type Query {
    prod_runs: [Prod_run!]! @all @guard
    prod_run(id: ID @eq): Prod_run @find @guard
    prod_run_two_id(
        prod_order_id: Int @eq
        prod_routing_link_id: Int @eq
    ): Prod_run @find @guard
}
type Prod_run {
    id: ID!
    prod_order_id: Int!
    prod_routing_link_id: Int!
    status: String!
    total_hours: Float
    total_man_hours: Float
    created_at: DateTime
    updated_at: DateTime
    productionOrder: Prod_order! @belongsTo
    routingLinks: Prod_routing_link! @belongsTo
    productionRunLines: [Prod_line!]! @hasMany
}

input CreateProdRunInput {
    prod_order_id: Int!
    prod_routing_link_id: Int!
    status: String!
    total_hours: Float
    total_man_hours: Float
    created_at: DateTime
    updated_at: DateTime
}
input UpdateProdRunInput {
    id: ID!
    prod_order_id: Int
    prod_routing_link_id: Int
    status: String
    total_hours: Float
    total_man_hours: Float
    created_at: DateTime
    updated_at: DateTime
}

extend type Mutation {
    createProdRun(input: CreateProdRunInput! @spread): Prod_run! @guard @create
    updateProdRun(input: UpdateProdRunInput! @spread): Prod_run @guard @update
    deleteProdRun(id: ID!): Prod_run @guard @delete
}
